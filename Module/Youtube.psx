/*********************************************************
	Don't forget to define a YoutubeApiKey for your Bot!
 */

class Poly.Bot.Youtube : Poly.Bot.Module {
	OutputFormat = '\\[Youtube\\] {Title} ({Duration})\r\nUploaded by {Uploader}, {TimeSinceUpload} ago, {Views} Views, Current Rating {Rating}/5';

	function Youtube(Bot) {
		if (!Bot.YoutubeApiKey)
			return;

		if (this.Module(Bot, "Youtube", [ 'Url' ])) {
			Bot.Modules.Url.On(['*youtube.com', '*youtu.be'], this.OnLink);
		}
	}

	function Request(ApiKey, Query) {
		Query = Query.ToPostString();

		return Http.Get(| 'https://www.googleapis.com/youtube/v3/videos?{Query}&key={ApiKey}');
	}

	function OnLink() {
		if (Host.Contains('youtube.com')) {
			VideoID = Url.Query.v;
		}
		else if (Host.Contains('youtu.be')) {
			VideoID = Url.Query.Path;
		}

		if (!VideoID) 
			return;

		YT = Bot.Modules.Youtube;

		Response = YT.Request(Bot.YoutubeApiKey, {
			'id': @VideoID,
			'part': 'contentDetails,snippet,statistics'
		}); 

		Response = Response.ToObject();
		Info = Response.items.0;

		Info = {
			'Id': @Info.id,
			'PublishedAt': @Info.snippet.publishedAt,
			'Title': @Info.snippet.title,
			'Uploader': @Info.snippet.channelTitle,
			'Duration': @Info.contentDetails.duration,
			'Views': @Info.statistics.viewCount,
			'Likes': @Info.statistics.likeCount.ToNum(),
			'Dislikes': @Info.statistics.dislikeCount.ToNum()
		};

		Info.TimeSinceUpload = Time.Parse(Info.PublishedAt);
		Info.TimeSinceUpload = Time.Now - Info.TimeSinceUpload;
		Info.TimeSinceUpload = Info.TimeSinceUpload.ToDurationString();

		Info.Duration = Info.Duration.Replace('P', '');
		Info.Duration = Info.Duration.Replace('D', '');
		Info.Duration = Info.Duration.Replace('T', '');
		Info.Duration = Info.Duration.Replace('H', 'h ');
		Info.Duration = Info.Duration.Replace('M', 'm ');
		Info.Duration = Info.Duration.Replace('S', 's');

		Info.TotalRatings = Info.Likes + Info.Dislikes;

		Likes = Convert.ToDouble(Info.Likes);
		TotalRatings = Convert.ToDouble(Info.TotalRatings);
		
		Info.Rating = Likes / TotalRatings;
		Info.Rating = Math.Round(Info.Rating * 5, 1);

		Bot.SendMessage(Convo, Info | YT.OutputFormat);
	}
}