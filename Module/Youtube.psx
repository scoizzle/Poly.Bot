class Poly.Bot.Youtube : Poly.Bot.Module {
	Format = '\\[Youtube\\] {title} ({durationString})\r\nUploaded by {uploader}, {timeSinceUpload} ago, Views {viewCount}, Current Rating {rating}/5';

	function Youtube(Bot) {
		if (this.Module(Bot, "Youtube")) {
			Bot.Modules.Url.On(['*youtube.com', '*youtu.be'], this.OnLink);
		}
	}

	function OnLink() {
		if (Host.Contains('youtube.com')) {
			VideoID = Url.Query.v;
		}
		else if (Host.Contains('youtu.be')) {
			VideoID = Url.Query.Path;
		}

		if (!VideoID) 
			return;
				
		Result = Http.Get(_.Template('http://gdata.youtube.com/feeds/api/videos/{VideoID}?v=2&alt=jsonc')).ToObject();

		if (!Result.data || !Result.data.uploaded)
			return;

		Uploaded = Time.Parse(Result.data.uploaded);
		Uploaded = Time.Now.Subtract(Uploaded);

		Duration = Convert.ToDouble(Result.data.duration);
		Duration = TimeSpan.FromSeconds(Duration);

		Result.data.timeSinceUpload = Uploaded.ToDurationString();
		Result.data.durationString = Duration.ToDurationString();

		Result.data.rating = Math.Round(Convert.ToDouble(Result.data.rating), 1);
		
		Bot.SendMessage(Convo, Result.data.Template(Bot.Modules.Youtube.Format));
	}
}